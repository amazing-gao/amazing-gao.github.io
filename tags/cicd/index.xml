<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cicd on Amazing-Gao 实在是高</title><link>/tags/cicd/</link><description>Recent content in cicd on Amazing-Gao 实在是高</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>amazing.gao@qq.com (AmazingGao)</managingEditor><webMaster>amazing.gao@qq.com (AmazingGao)</webMaster><copyright>Amazing-Gao — All rights reserved.</copyright><lastBuildDate>Sat, 16 Jan 2021 16:57:19 +0800</lastBuildDate><atom:link href="/tags/cicd/index.xml" rel="self" type="application/rss+xml"/><item><title>Go项目Gitlab CICD提速指南</title><link>/posts/2021/01/go/cicd/</link><pubDate>Sat, 16 Jan 2021 16:57:19 +0800</pubDate><author>amazing.gao@qq.com (AmazingGao)</author><guid>/posts/2021/01/go/cicd/</guid><description>背景 我司使用GitLab作为代码仓库，Go项目在CICD过程中需要下载依赖，但大部分情况下依赖并未发生变化，重复下载是无用且非常耗时的操作，严重拖慢了CICD的效率。这对于任何一个追求效率的团队来说都是无法接受的。
之前也了解到一些go依赖缓存的解决方案，但不是特别优雅。从 Go 1.15 Release Notes 中看到，该版本新增了 GOMODCACHE 环境变量的支持，官方说明如下：
The location of the module cache may now be set with the GOMODCACHE environment variable. The default value of GOMODCACHE is GOPATH[0]/pkg/mod, the location of the module cache before this change. A workaround is now available for Windows &amp;quot;Access is denied&amp;quot; errors in go commands that access the module cache, caused by external programs concurrently scanning the file system (see issue #36568).</description></item></channel></rss>